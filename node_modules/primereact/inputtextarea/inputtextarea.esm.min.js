import*as e from"react";import{PrimeReactContext as t}from"primereact/api";import{ComponentBase as n,useHandleStyle as r}from"primereact/componentbase";import{useMergeProps as o}from"primereact/hooks";import{KeyFilter as i}from"primereact/keyfilter";import{Tooltip as l}from"primereact/tooltip";import{classNames as a,ObjectUtils as u,DomHandler as s}from"primereact/utils";function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},p.apply(this,arguments)}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function f(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function y(e){var t=f(e,"string");return"symbol"===c(t)?t:String(t)}var m=n.extend({defaultProps:{__TYPE:"InputTextarea",__parentMetadata:null,autoResize:!1,invalid:!1,variant:null,keyfilter:null,onBlur:null,onFocus:null,onBeforeInput:null,onInput:null,onKeyDown:null,onKeyUp:null,onPaste:null,tooltip:null,tooltipOptions:null,validateOnly:!1,children:void 0},css:{classes:{root:function(e){var t=e.props,n=e.context;return a("p-inputtextarea p-inputtext p-component",{"p-disabled":t.disabled,"p-filled":e.isFilled,"p-inputtextarea-resizable":t.autoResize,"p-invalid":t.invalid,"p-variant-filled":t.variant?"filled"===t.variant:n&&"filled"===n.inputStyle})}},styles:"\n@layer primereact {\n    .p-inputtextarea-resizable {\n        overflow: hidden;\n        resize: none;\n    }\n    \n    .p-fluid .p-inputtextarea {\n        width: 100%;\n    }\n}\n"}});function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function v(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){var r,o,i;r=e,i=n[t],(o=y(o=t))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var b=e.memo(e.forwardRef((function(n,c){var f=o(),y=e.useContext(t),d=m.getProps(n,y),b=e.useRef(c),g=e.useRef(0),h=m.setMetaData(v(v({props:d},d.__parentMetadata),{},{context:{disabled:d.disabled}})),O=h.ptm,P=h.cx;r(m.css.styles,h.isUnstyled,{name:"inputtextarea"});var w=function(e){var t=b.current;t&&s.isVisible(t)&&(g.current||(g.current=t.scrollHeight,t.style.overflow="hidden"),(g.current!==t.scrollHeight||e)&&(t.style.height="",t.style.height=t.scrollHeight+"px",parseFloat(t.style.height)>=parseFloat(t.style.maxHeight)?(t.style.overflowY="scroll",t.style.height=t.style.maxHeight):t.style.overflow="hidden",g.current=t.scrollHeight))};e.useEffect((function(){u.combinedRefs(b,c)}),[b,c]),e.useEffect((function(){d.autoResize&&w(!0)}),[d.autoResize]);var x=e.useMemo((function(){return u.isNotEmpty(d.value)||u.isNotEmpty(d.defaultValue)}),[d.value,d.defaultValue]),j=u.isNotEmpty(d.tooltip),E=f({ref:b,className:a(d.className,P("root",{context:y,isFilled:x})),onFocus:function(e){d.autoResize&&w(),d.onFocus&&d.onFocus(e)},onBlur:function(e){d.autoResize&&w(),d.onBlur&&d.onBlur(e)},onKeyUp:function(e){d.autoResize&&w(),d.onKeyUp&&d.onKeyUp(e)},onKeyDown:function(e){d.onKeyDown&&d.onKeyDown(e),d.keyfilter&&i.onKeyPress(e,d.keyfilter,d.validateOnly)},onBeforeInput:function(e){d.onBeforeInput&&d.onBeforeInput(e),d.keyfilter&&i.onBeforeInput(e,d.keyfilter,d.validateOnly)},onInput:function(e){var t=e.target;d.autoResize&&w(u.isEmpty(t.value)),d.onInput&&d.onInput(e),u.isNotEmpty(t.value)?s.addClass(t,"p-filled"):s.removeClass(t,"p-filled")},onPaste:function(e){d.onPaste&&d.onPaste(e),d.keyfilter&&i.onPaste(e,d.keyfilter,d.validateOnly)}},m.getOtherProps(d),O("root"));return e.createElement(e.Fragment,null,e.createElement("textarea",E),j&&e.createElement(l,p({target:b,content:d.tooltip,pt:O("tooltip")},d.tooltipOptions)))})));b.displayName="InputTextarea";export{b as InputTextarea};
